{"version":3,"sources":["webpack:///./src/components/subpageHeader.js","webpack:///./src/templates/blog-post.js"],"names":["query","render","data","component","display","flexWrap","style","padding","overflow","height","alignItems","width","lineHeight","to","textDecoration","src","alt","marginBottom","verticalAlign","ml","searchIndex","index","useStyles","makeStyles","root","minWidth","postTitle","color","fontWeight","fontSize","pos","articleContainer","margin","pageQuery","pageContext","location","post","siteTitle","classes","title","className","variant","description","excerpt","class","dangerouslySetInnerHTML","__html","html"],"mappings":"qvEA8CA,EAxCsB,kBACpB,iCACEA,MADF,YAQEC,OAAQ,SAAAC,GAAI,OACV,uBACFC,UADE,SAEFC,QAFE,OAGCC,SAHD,SAIFC,MAAO,CACNC,QADM,SAENC,SAFM,UAGNC,OAAQ,SAGT,uBAAKN,UAAL,MAAqBC,QAArB,SAAsCM,WAAtC,OAAwDC,MAAxD,MAAoEL,MAAO,CAG1EM,WAAY,SAEZ,0BAAMC,GAAN,IAAaP,MAAO,CAACQ,eAAe,SACnC,yBAAKC,IAAL,gBAAyBC,IAAzB,WAAwCV,MAAO,CAACW,aAAD,IAAkBb,QAAlB,eAAyCc,cAAc,cAGxG,uBAAKf,UAAL,MAAqBC,QAArB,SAAsCM,WAAtC,QAAyDS,GAAzD,KAAiER,MAAjE,MAA6EL,MAAO,IAI/E,uBAAQc,YAAalB,kBAAqBmB,WAhCjD,U,YCIIC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SADI,IAENR,aAAc,QAEfS,UAAW,CACVC,MADU,UAEVC,WAFU,MAGVC,SAAU,UAEVC,IAAK,CACHb,aADG,GAELY,SAAU,WAEXE,iBAAkB,CACjBxB,QADiB,OAEjByB,OAAQ,YAyCGC,GAFb,UAnCyB,SAAC,GAAqC,IAAnC/B,EAAkC,EAAlCA,KAAMgC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOlC,EAAb,eACMmC,EAAYnC,oBAAlB,MAGKoC,GAFsBJ,EAHiC,SAGjCA,EAHiC,KAK7CZ,KAEf,OACE,uBAAQa,SAAR,EAA4BI,MAAOF,GACpC,oBADC,MAED,uBAAOG,UAAWF,EAAlB,iBAA4CG,QAAQ,YAChD,uBACEF,MAAOH,cADT,MAEEM,YAAaN,2BAAgCA,EAAKO,UAEpD,iCACE,4BAAQrC,MAAO,CAClBC,QAAS,aAEJ,uBAAYiC,UAAWF,EAAvB,UAA0CG,QAA1C,KAAuDtC,UAAU,MAC9DiC,cAJL,OAME,uBAAYI,UAAWF,EAAvB,SAAyCnC,UAAU,KAChDiC,cARP,OAWE,6BAASQ,MAAT,YAA2BC,wBAAyB,CAAEC,OAAQV,EAAKW,QACnE,2BApBP,UA8BK","file":"component---src-templates-blog-post-js-14ffd8da933006821a01.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Box from '@material-ui/core/Box';\n\nimport Search from \"./search\"\n\nconst SubpageHeader = () => (\n  <StaticQuery\n    query={graphql`\n      query SubpageSearchIndexQuery {\n        siteSearchIndex {\n          index\n        }\n      }\n    `}\n    render={data => (\n      <Box\n\t\t\t\tcomponent=\"header\"\n\t\t\t\tdisplay=\"flex\"\n      \tflexWrap=\"nowrap\"\n\t\t\t\tstyle={{\n\t\t\t\t\tpadding: '15px 0',\n\t\t\t\t\toverflow: 'visible',\n\t\t\t\t\theight: '82px'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box component=\"div\" display=\"inline\" alignItems=\"left\" width=\"20%\" style={{\n\t\t\t\t\t//float:'left',\n\t\t\t\t\t//width: '20%',\n\t\t\t\t\tlineHeight: '52px'\n\t\t\t\t}}>\n\t\t\t\t\t<Link to=\"/\" style={{textDecoration:'none'}}>\n\t\t\t\t\t\t<img src=\"/limecoda.png\" alt=\"LimeCoda\" style={{marginBottom:\"0\",display:\"inline-block\",verticalAlign:'middle'}} />\n\t\t\t\t\t</Link>\n\t\t\t\t</Box>\n\t\t\t\t<Box component=\"div\" display=\"inline\" alignItems=\"right\" ml=\"4%\" width=\"76%\" style={{\n\t\t\t\t\t//width: '76%',\n\t\t\t\t\t//float:'right'\n\t\t\t\t}}>\n        \t<Search searchIndex={data.siteSearchIndex.index} />\n\t\t\t\t</Box>\n      </Box>\n    )}\n  />\n)\n\nexport default SubpageHeader","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport Layout from \"../components/layout\"\nimport SubpageHeader from \"../components/subpageHeader\";\nimport SEO from \"../components/seo\"\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n\t\tmarginBottom: '20px'\n  },\n\tpostTitle: {\n\t\tcolor: '#084400',\n\t\tfontWeight: '500',\n\t\tfontSize: '1.9rem'\n\t},\n  pos: {\n    marginBottom: 12,\n\t\tfontSize: '0.75rem'\n  },\n\tarticleContainer: {\n\t\tpadding: '20px',\n\t\tmargin: '30px 0'\n\t}\n});\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n\tconst classes = useStyles();\n\n  return (\n    <Layout location={location} title={siteTitle}>\n\t\t\t<SubpageHeader />\n\t\t\t<Paper className={classes.articleContainer} variant=\"outlined\">\n      \t<SEO\n      \t  title={post.frontmatter.title}\n      \t  description={post.frontmatter.description || post.excerpt}\n      \t/>\n      \t<article>\n      \t  <header style={{\n\t\t\t\t\t\tpadding: '0 0 13px'\n\t\t\t\t\t}}>\n      \t    <Typography className={classes.postTitle} variant=\"h1\" component=\"h1\">\n      \t      {post.frontmatter.title}\n      \t    </Typography>\n      \t    <Typography className={classes.postBody} component=\"p\">\n      \t      {post.frontmatter.date}\n      \t    </Typography>\n      \t  </header>\n      \t  <section class=\"post-body\" dangerouslySetInnerHTML={{ __html: post.html }} />\n      \t  <footer>\n      \t  </footer>\n      \t</article>\n\t\t\t</Paper>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}